
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # module.iam_policy.aws_iam_policy.lambda_sns_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_policy" "lambda_sns_policy" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m attachment_count = (known after apply)
      [32m+[0m[0m description      = "Policy to grant Lambda and SNS permissions along with existing EC2 and S3 access."
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m name             = "LambdaAndSNSFullAccess"
      [32m+[0m[0m name_prefix      = (known after apply)
      [32m+[0m[0m path             = "/"
      [32m+[0m[0m policy           = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = [
                          [32m+[0m[0m "lambda:CreateFunction",
                          [32m+[0m[0m "lambda:UpdateFunctionCode",
                          [32m+[0m[0m "lambda:UpdateFunctionConfiguration",
                          [32m+[0m[0m "lambda:InvokeFunction",
                          [32m+[0m[0m "lambda:DeleteFunction",
                          [32m+[0m[0m "lambda:GetFunction",
                          [32m+[0m[0m "lambda:ListFunctions",
                        ]
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = "*"
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = [
                          [32m+[0m[0m "sns:CreateTopic",
                          [32m+[0m[0m "sns:DeleteTopic",
                          [32m+[0m[0m "sns:ListTopics",
                          [32m+[0m[0m "sns:Subscribe",
                          [32m+[0m[0m "sns:Unsubscribe",
                          [32m+[0m[0m "sns:Publish",
                          [32m+[0m[0m "sns:GetTopicAttributes",
                          [32m+[0m[0m "sns:SetTopicAttributes",
                        ]
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = "*"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m policy_id        = (known after apply)
      [32m+[0m[0m tags_all         = (known after apply)
    }

[1m  # module.iam_policy.aws_iam_user_policy_attachment.attach_lambda_sns_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_user_policy_attachment" "attach_lambda_sns_policy" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = (known after apply)
      [32m+[0m[0m user       = "GitPod"
    }

[1m  # module.s3_bucket.aws_s3_bucket.practice[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket" "practice" {
      [32m+[0m[0m acceleration_status         = (known after apply)
      [32m+[0m[0m acl                         = (known after apply)
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m bucket                      = "manojawstestindia"
      [32m+[0m[0m bucket_domain_name          = (known after apply)
      [32m+[0m[0m bucket_prefix               = (known after apply)
      [32m+[0m[0m bucket_regional_domain_name = (known after apply)
      [32m+[0m[0m force_destroy               = false
      [32m+[0m[0m hosted_zone_id              = (known after apply)
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m object_lock_enabled         = (known after apply)
      [32m+[0m[0m policy                      = (known after apply)
      [32m+[0m[0m region                      = (known after apply)
      [32m+[0m[0m request_payer               = (known after apply)
      [32m+[0m[0m tags                        = {
          [32m+[0m[0m "Name"    = "Testing"
          [32m+[0m[0m "Project" = "aws-infrastructure"
        }
      [32m+[0m[0m tags_all                    = {
          [32m+[0m[0m "Name"    = "Testing"
          [32m+[0m[0m "Project" = "aws-infrastructure"
        }
      [32m+[0m[0m website_domain              = (known after apply)
      [32m+[0m[0m website_endpoint            = (known after apply)

      [32m+[0m[0m cors_rule (known after apply)

      [32m+[0m[0m grant (known after apply)

      [32m+[0m[0m lifecycle_rule (known after apply)

      [32m+[0m[0m logging (known after apply)

      [32m+[0m[0m object_lock_configuration {
          [32m+[0m[0m object_lock_enabled = "Enabled"

          [32m+[0m[0m rule {
              [32m+[0m[0m default_retention {
                  [32m+[0m[0m days = 30
                  [32m+[0m[0m mode = "GOVERNANCE"
                }
            }
        }

      [32m+[0m[0m replication_configuration (known after apply)

      [32m+[0m[0m server_side_encryption_configuration (known after apply)

      [32m+[0m[0m versioning {
          [32m+[0m[0m enabled    = true
          [32m+[0m[0m mfa_delete = false
        }

      [32m+[0m[0m website (known after apply)
    }

[1m  # module.s3_bucket.aws_s3_bucket_notification.s3_event_notification_practice[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_notification" "s3_event_notification_practice" {
      [32m+[0m[0m bucket      = "manojawstestindia"
      [32m+[0m[0m eventbridge = false
      [32m+[0m[0m id          = (known after apply)

      [32m+[0m[0m topic {
          [32m+[0m[0m events    = [
              [32m+[0m[0m "s3:ObjectCreated:*",
              [32m+[0m[0m "s3:ObjectRemoved:*",
              [32m+[0m[0m "s3:ObjectRestore:*",
            ]
          [32m+[0m[0m id        = (known after apply)
          [32m+[0m[0m topic_arn = (known after apply)
        }
    }

[1m  # module.s3_bucket.aws_s3_bucket_policy.practice_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_policy" "practice_policy" {
      [32m+[0m[0m bucket = "manojawstestindia"
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m policy = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "s3:*"
                      [32m+[0m[0m Condition = {
                          [32m+[0m[0m IpAddress = {
                              [32m+[0m[0m "aws:SourceIp" = "192.168.1.1/32"
                            }
                        }
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = "*"
                      [32m+[0m[0m Resource  = "arn:aws:s3:::manojawstestindia/*"
                      [32m+[0m[0m Sid       = "AllowAccessFromSpecificIPForUser"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
    }

[1m  # module.s3_bucket.aws_s3_bucket_versioning.practice[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_versioning" "practice" {
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)

      [32m+[0m[0m versioning_configuration {
          [32m+[0m[0m mfa_delete = (known after apply)
          [32m+[0m[0m status     = "Enabled"
        }
    }

[1m  # module.s3_bucket.aws_sns_topic.s3_event_notifications[0m will be created
[0m  [32m+[0m[0m resource "aws_sns_topic" "s3_event_notifications" {
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m beginning_archive_time      = (known after apply)
      [32m+[0m[0m content_based_deduplication = false
      [32m+[0m[0m fifo_topic                  = false
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m name                        = "s3-event-notifications"
      [32m+[0m[0m name_prefix                 = (known after apply)
      [32m+[0m[0m owner                       = (known after apply)
      [32m+[0m[0m policy                      = (known after apply)
      [32m+[0m[0m signature_version           = (known after apply)
      [32m+[0m[0m tags_all                    = (known after apply)
      [32m+[0m[0m tracing_config              = (known after apply)
    }

[1m  # module.s3_bucket.aws_sns_topic_policy.sns_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_sns_topic_policy" "sns_policy" {
      [32m+[0m[0m arn    = (known after apply)
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m owner  = (known after apply)
      [32m+[0m[0m policy = (known after apply)
    }

[1m  # module.s3_bucket.aws_sns_topic_subscription.email_subscription[0m will be created
[0m  [32m+[0m[0m resource "aws_sns_topic_subscription" "email_subscription" {
      [32m+[0m[0m arn                             = (known after apply)
      [32m+[0m[0m confirmation_timeout_in_minutes = 1
      [32m+[0m[0m confirmation_was_authenticated  = (known after apply)
      [32m+[0m[0m endpoint                        = "ss.mano1998@gmail.com"
      [32m+[0m[0m endpoint_auto_confirms          = false
      [32m+[0m[0m filter_policy_scope             = (known after apply)
      [32m+[0m[0m id                              = (known after apply)
      [32m+[0m[0m owner_id                        = (known after apply)
      [32m+[0m[0m pending_confirmation            = (known after apply)
      [32m+[0m[0m protocol                        = "email"
      [32m+[0m[0m raw_message_delivery            = false
      [32m+[0m[0m topic_arn                       = (known after apply)
    }

[1mPlan:[0m 9 to add, 0 to change, 0 to destroy.
[0m[33m╷[0m[0m
[33m│[0m [0m[1m[33mWarning: [0m[0m[1mArgument is deprecated[0m
[33m│[0m [0m
[33m│[0m [0m[0m  with module.s3_bucket.aws_s3_bucket.practice,
[33m│[0m [0m  on modules/s3/main.tf line 2, in resource "aws_s3_bucket" "practice":
[33m│[0m [0m   2: resource "aws_s3_bucket" "practice" [4m{[0m[0m
[33m│[0m [0m
[33m│[0m [0mUse the top-level parameter object_lock_enabled and the aws_s3_bucket_object_lock_configuration resource instead
[33m│[0m [0m
[33m│[0m [0m(and 7 more similar warnings elsewhere)
[33m╵[0m[0m
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
